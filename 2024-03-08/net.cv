{"name":"Untitled","timePeriod":500,"clockEnabled":true,"projectId":"eSyjYINunolZeWPfHA8b","focussedCircuit":53889215096,"orderedTabs":["53889215096"],"scopes":[{"layout":{"width":100,"height":40,"title_x":50,"title_y":13,"titleEnabled":true},"verilogMetadata":{"isVerilogCircuit":false,"isMainCircuit":false,"code":"// Write Some Verilog Code Here!","subCircuitScopeIds":[]},"allNodes":[{"x":10,"y":0,"type":1,"bitWidth":1,"label":"","connections":[1]},{"x":-10,"y":0,"type":0,"bitWidth":1,"label":"","connections":[0]},{"x":20,"y":0,"type":1,"bitWidth":1,"label":"","connections":[3]},{"x":10,"y":0,"type":0,"bitWidth":1,"label":"","connections":[2]}],"id":53889215096,"name":"Main","Input":[{"x":410,"y":530,"objectType":"Input","label":"B","direction":"RIGHT","labelDirection":"LEFT","propagationDelay":0,"customData":{"nodes":{"output1":0},"values":{"state":1},"constructorParamaters":["RIGHT",1,{"x":0,"y":20,"id":"Bbwn2rBJmTUU1WI6Avb3"}]}}],"Output":[{"x":570,"y":530,"objectType":"Output","label":"X","direction":"LEFT","labelDirection":"RIGHT","propagationDelay":0,"customData":{"nodes":{"inp1":3},"constructorParamaters":["LEFT",1,{"x":100,"y":20,"id":"Cutk2lKLzKQrV8lUCGYs"}]}}],"NotGate":[{"x":490,"y":530,"objectType":"NotGate","label":"","direction":"RIGHT","labelDirection":"LEFT","propagationDelay":10,"customData":{"constructorParamaters":["RIGHT",1],"nodes":{"output1":2,"inp1":1}}}],"Text":[{"x":300,"y":130,"objectType":"Text","label":"Vi ska realisera ett grindnät som uppfyller den logiska ekvationen X = A'B'C' + A'B'C + AB'C' + AB'C.\n\nVi förenklar ekvationen för att minska antalet grindar som behövs, vilket medför lägre kostnad samt att kretsen tar upp mindre yta:\n\nX = A'B'C' + A'B'C + AB'C' + AB'C, \n\ndär de två första termerna har A'B' gemensamt, medan de två andra har AB' gemensamt. \n\nVi kan därmed bryta ut dessa såsom visas nedan:\n\nX = A'B'(C' + C) + AB'(C' + C),\n\ndär C' + C = 1, den enda alltid kommer vara 1 och den andra 0 => C' + C = 1 + 0 = 1. Därmed kan ekvationen ovan förenklas till\n\nX = A'B' + AB' = B'(A' + A), \n\ndär A' + A = 1, vilket innebär att\n\nX = B' * 1 = B'\n\nKretsen kan därmed konstrueras i enlighet med den förenklade ekvationen X = B'.\nUtsignal X är alltså lika med inversen av insignal B.\n\nDärmed kan kretsen realiserar med en NOT-grind, som har B som insignal.","direction":"RIGHT","labelDirection":"LEFT","propagationDelay":10,"customData":{"constructorParamaters":["Vi ska realisera ett grindnät som uppfyller den logiska ekvationen X = A'B'C' + A'B'C + AB'C' + AB'C.\n\nVi förenklar ekvationen för att minska antalet grindar som behövs, vilket medför lägre kostnad samt att kretsen tar upp mindre yta:\n\nX = A'B'C' + A'B'C + AB'C' + AB'C, \n\ndär de två första termerna har A'B' gemensamt, medan de två andra har AB' gemensamt. \n\nVi kan därmed bryta ut dessa såsom visas nedan:\n\nX = A'B'(C' + C) + AB'(C' + C),\n\ndär C' + C = 1, den enda alltid kommer vara 1 och den andra 0 => C' + C = 1 + 0 = 1. Därmed kan ekvationen ovan förenklas till\n\nX = A'B' + AB' = B'(A' + A), \n\ndär A' + A = 1, vilket innebär att\n\nX = B' * 1 = B'\n\nKretsen kan därmed konstrueras i enlighet med den förenklade ekvationen X = B'.\nUtsignal X är alltså lika med inversen av insignal B.\n\nDärmed kan kretsen realiserar med en NOT-grind, som har B som insignal.",14]}}],"restrictedCircuitElementsUsed":[],"nodes":[]}]}